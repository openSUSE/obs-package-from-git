#!/bin/bash
set -eu

# Given a Git repo of a package in the Open Build Service,
# make a source package from that repo,
# using `osc` to bring the dependencies to a chroot.

# Minimal dependencies:
# - git-core (not used here; our caller, typically Jenkins, will have used it)
# - osc    https://github.com/openSUSE/osc
# - build  https://github.com/openSUSE/obs-build

main() {
    local USAGE_TEXT='
Usage: main <options>

Options:
-P <OBS project>
-p <OBS package>
-o <OBS target directory> (will be removed first)
-c <command> Shell command to make a package
'
    local COMMAND OBSDIR PROJECT PACKAGE
    local USAGE=false RC=0
    while getopts c:ho:P:p: FLAG; do
        case $FLAG in
            c) COMMAND="$OPTARG";;
            h) USAGE=true;;
            o) OBSDIR="$OPTARG";;
            P) PROJECT="$OPTARG";;
            p) PACKAGE="$OPTARG";;

            *) USAGE=true; RC=1;;
        esac
    done
    shift $((OPTIND-1))

    if $USAGE; then
        echo "$USAGE_TEXT"
        return $RC
    fi

    local GITDIR=`pwd`
    rm -rf $OBSDIR
    osc checkout --output-dir=$OBSDIR $PROJECT $PACKAGE
    cd $OBSDIR

    export OSC_BUILD_ROOT=/var/tmp/build-root-git-to-obs
    init_build_root

    copy_git_to_chroot $GITDIR

    make_package "$COMMAND"

    fetch_package

    # CLEANUP
    cleanup_git_in_chroot
}

# short circuit the first build
# in:
#   cwd: obs
#   $OSC_BUILD_ROOT
# out:
#   chroot at $OSC_BUILD_ROOT is initialized
init_build_root() {
    local SUCCESS_FILE=/tmp/build-root-ready

    rm -f $OSC_BUILD_ROOT/$SUCCESS_FILE
    local MSG="intentional failure - now the build root is set up and we can make a tarball there"
    sed -i -e "/^%build/atouch $SUCCESS_FILE; : $MSG; exit 1" *.spec
    # bsc#1053839 interaction to ask about cleaning the build root
    local CLEAN
    if [ -f $OSC_BUILD_ROOT/not-ready ]; then
        CLEAN=--clean
    fi
    osc build $CLEAN --build-uid=caller || :
    rm $OSC_BUILD_ROOT/$SUCCESS_FILE # fails if not present
}

TMPGIT=/tmp/gitdir

# in:
#   $1 git dir
#   $OSC_BUILD_ROOT
copy_git_to_chroot() {
    cleanup_git_in_chroot
    mkdir -p  $OSC_BUILD_ROOT/$TMPGIT
    rmdir     $OSC_BUILD_ROOT/$TMPGIT
    cp -a $1  $OSC_BUILD_ROOT/$TMPGIT
}

# in:
#   $OSC_BUILD_ROOT
cleanup_git_in_chroot() {
    rm -rf    $OSC_BUILD_ROOT/$TMPGIT
}

# in:
#   $1 command to make package
# out:
#   package in $OSC_BUILD_ROOT/$TMPGIT/package
make_package() {
    sudo chroot --userspec=$(id -u) $OSC_BUILD_ROOT \
        sh -c "cd ${TMPGIT#$OSC_BUILD_ROOT}; $1"
}

# in:
#    pwd: obs dir
fetch_package() {
    rm -v *.tar.*
    cp -av $OSC_BUILD_ROOT/$TMPGIT/package/* .
}

main "$@"
